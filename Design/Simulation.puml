@startuml
hide circles

!includesub PriceableElements.puml!Pricer
!includesub PriceableElements.puml!QuoteProvider
!includesub PriceableElements.puml!PricerFactory


!startsub Simulation
package PriceCalculator
{
    package Simulation
    {
        abstract class Simulation
        {
            {abstract} +getSimulatedValue(variableName: String, simulationDate: Date, simulationIndex: Integer): Real
        }
    }
}
!endsub


!startsub GeometricBrownianMotion
package PriceCalculator
{
    package Simulation
    {
        class GeometricBrownianMotion
        {
            {static} +create(variableNames: String[1..*], observationDate: Date, simulationDates: Date[1..*], initialValues[1..*], drift: DiscountCurve[1..*], covariance: CovarianceTermStructure)
            +getSimulatedValue(variableName: String, simulationDate: Date, simulationIndex: Integer): Real
        }
    }
}
!endsub


!startsub SimulatedQuoteProvider
package PriceCalculator
{
    package Simulation
    {
        class SimulatedQuoteProvider
        {
            -simulationIndex
            +getQuotes(ticker: String, observationDates: Date[1..*]{ordered}): Real[1..*]{ordered}
        }
    }
}
!endsub


!startsub CovarianceTermStructure
package PriceCalculator
{
    package Simulation
    {
        abstract class CovarianceTermStructure
        {
            {abstract} +getObservationDate(): Date
            {abstract} +getTotalCovariance(forecastDate: Date)
        }
    }
!endsub


!startsub DiscountCurve
package PriceCalculator
{
    package Simulation
    {
        abstract class DiscountCurve
        {
            {abstract} +getValuationDate(): Date
            {abstract} +getDiscountFactor(paymentDate: Date): Real
        }
    }
!endsub


!startsub FlatHistoricalCovarianceForecast
package PriceCalculator
{
    package Simulation
    {
        class FlatHistoricalCovarianceForecast
        {
            -observationDate: Date
            -historicalWindow: Date[2..*]
            {static} +create(underlyings: String[1..*]{ordered}, observationDate: Date, historicalWindowSize: Real, market: QuoteProvider)
            +getObservationDate(): Date
            +getTotalCovariance(forecastDate: Date)
        }
    }
!endsub


!startsub IndexDiscountCurve
package PriceCalculator
{
    package Simulation
    {
        class IndexDiscountCurve
        {
            -valuationDate: Date
            -rates: Real[1..*]
            -durations: Real[1..*]
            {static} +create(valuationDate: Date, tenors: String[1..*]{ordered}, tickers: String[1..*]{ordered}, market: QuoteProvider)
            +getValuationDate(): Date
            +getDiscountFactor(paymentDate: Date): Real
        }
    }
!endsub


!startsub SimulationPricer
package PriceCalculator
{
    package Simulation
    {
        class SimulationPricer
        {
            -valuationDate: Date
            {static} +createPricer(underlyings: String[1..*], market: QuoteProvider): Pricer
            {static} +create(underlyings, valuationDate: Date, market: QuoteProvider)
            +getValuationDate(): Date
            +getDiscountFactor(paymentDate: Date): Real
            +getCallOptionBasePrice(underlying: String, strike: Real, maturityDate: Date): Real
            +getCashFlowBasePrice(pricedElement: CashFlow): Real
        }
    }
}
!endsub


GeometricBrownianMotion -up-|> Simulation
GeometricBrownianMotion --> "drift 1..*" DiscountCurve
GeometricBrownianMotion --> "covariance" CovarianceTermStructure
IndexDiscountCurve -up-|> DiscountCurve
IndexDiscountCurve ..> QuoteProvider
FlatHistoricalCovarianceForecast -up-|> CovarianceTermStructure
FlatHistoricalCovarianceForecast ..> QuoteProvider
SimulatedQuoteProvider -up--|> QuoteProvider
SimulatedQuoteProvider -up--> "originalQuoteProvider" QuoteProvider
SimulatedQuoteProvider --> "amendment" Simulation
SimulationPricer -up--|> Pricer
SimulationPricer -up--|> PricerFactory
SimulationPricer --> "discountCurve" DiscountCurve
SimulationPricer --> "underlyingCovarianceForecast" CovarianceTermStructure
SimulationPricer --> "implementation" Simulation
SimulationPricer ..> QuoteProvider
SimulationPricer ..> IndexDiscountCurve: create
SimulationPricer ..> FlatHistoricalCovarianceForecast: create
SimulationPricer ..> SimulatedQuoteProvider: create


@enduml
