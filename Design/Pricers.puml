@startuml
hide circles

!includesub PriceableElements.puml!Pricer
!includesub PriceableElements.puml!Market
!includesub PriceableElements.puml!PricerFactory


!startsub Simulation
package PriceCalculator
{
    package Simulation
    {
        abstract class Simulation
        {
            {abstract} +getSimulatedValue(variableName, simulationDate: Date, simulationIndex)
        }
    }
}
!endsub


!startsub GeometricBrownianMotion
package PriceCalculator
{
    package Simulation
    {
        class GeometricBrownianMotion
        {
            {static} +create(variableNames, observationDate: Date, simulationDates: Date[1..*], drift: DiscountCurve, covariance: Covariance)
            +getSimulatedValue(variableName, simulationDate: Date, simulationIndex)
        }
    }
}
!endsub


!startsub SimulatedMarket
package PriceCalculator
{
    package Simulation
    {
        class SimulatedMarket
        {
            -simulationIndex
            +getQuote(ticker, observationDate: Date)
        }
    }
}
!endsub


!startsub Covariance
package PriceCalculator
{
    package Simulation
    {
        abstract class Covariance
        {
            {abstract} +getTotalCovariance(forecastDate: Date)
        }
    }
!endsub


!startsub DiscountCurve
package PriceCalculator
{
    package Simulation
    {
        abstract class DiscountCurve
        {
            {abstract} +getDiscountFactor(paymentDate: Date)
        }
    }
!endsub


!startsub FlatHistoricalCovariance
package PriceCalculator
{
    package Simulation
    {
        class FlatHistoricalCovariance
        {
            {static} +create(underlyings, observationDate: Date, market: Market)
            +getTotalCovariance(forecastDate: Date)
        }
    }
!endsub


!startsub IndexDiscountCurve
package PriceCalculator
{
    package Simulation
    {
        class IndexDiscountCurve
        {
            {static} +create(valuationDate: Date, tenors, tickers, market: Market)
            +getDiscountFactor(paymentDate: Date)
        }
    }
!endsub


!startsub SimulationPricer
package PriceCalculator
{
    package Simulation
    {
        class SimulationPricer
        {
            {static} +createPricer(underlyings, valuationDate: Date, market: Market): Pricer
            {static} +create(underlyings, valuationDate: Date, market: Market)
            +getBasePrice(pricedElement: CashFlow, valuationDate: Date)
        }
    }
}
!endsub


GeometricBrownianMotion -up-|> Simulation
GeometricBrownianMotion --> "drift" DiscountCurve
GeometricBrownianMotion --> "covariance" Covariance
IndexDiscountCurve -up-|> DiscountCurve
FlatHistoricalCovariance -up-|> Covariance
SimulatedMarket -up--|> Market
SimulatedMarket -up--> "originalMarket" Market
SimulatedMarket --> "amendment" Simulation
SimulationPricer -up--|> Pricer
SimulationPricer --|> PricerFactory
SimulationPricer --> Market
SimulationPricer ..> IndexDiscountCurve
SimulationPricer ..> FlatHistoricalCovariance
SimulationPricer --> Simulation
SimulationPricer ..> SimulatedMarket


@enduml
